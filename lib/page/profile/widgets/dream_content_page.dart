import 'package:dreamer/common/router/router_utils.dart';
import 'package:dreamer/common/widget/base_normal_page.dart';
import 'package:dreamer/constants/colors.dart';
import 'package:flutter/material.dart';

class DreamInfo {
  final String title;
  final int index;
  final List<DreamChapter> chapters;

  DreamInfo({required this.title, required this.index, required this.chapters});
}

class DreamChapter {
  final String title;
  final String content;

  DreamChapter({required this.title, required this.content});
}

List<DreamInfo> testList = [
  DreamInfo(
    title: 'Dream1',
    index: 0,
    chapters: [
      DreamChapter(
        title: 'Chapter1',
        content: 'Content of dream will be generated by ChatGPT based on the questions they answer.'
            '\n\nThe content will be generated in the form of a story, which will be divided into chapters',
      ),
      DreamChapter(title: 'Chapter2', content: 'Content2 \n\n test data \n\n test data'),
      DreamChapter(
          title: 'Chapter3',
          content: 'Content of dream will be generated by ChatGPT based on the questions they answer.'
              '\n\n Content of dream will be generated by ChatGPT based on the questions they answer.'
              '\n\nContent of dream will be generated by ChatGPT based on the questions they answer. '
              '\n\nContent of dream will be generated by ChatGPT based on the questions they answer.'
              '\nContent of dream will be generated by ChatGPT based on the questions they answer.'),
      DreamChapter(title: 'Chapter4', content: 'Content2 \n\n test data \n\n test data'),
      DreamChapter(
          title: 'Chapter5',
          content: 'Content of dream will be generated by ChatGPT based on the questions they answer.'
              '\n\n Content of dream will be generated by ChatGPT based on the questions they answer.'
              '\n\nContent of dream will be generated by ChatGPT based on the questions they answer. '
              '\n\nContent of dream will be generated by ChatGPT based on the questions they answer.'
              '\nContent of dream will be generated by ChatGPT based on the questions they answer.'),
    ],
  ),
  DreamInfo(
    title: 'Dream2',
    index: 1,
    chapters: [
      DreamChapter(title: 'Chapter1', content: 'Content1'),
      DreamChapter(title: 'Chapter2', content: 'Content2'),
      DreamChapter(title: 'Chapter3', content: 'Content3'),
    ],
  ),
  DreamInfo(
    title: 'Dream3',
    index: 2,
    chapters: [
      DreamChapter(title: 'Chapter1', content: 'Content1'),
      DreamChapter(title: 'Chapter2', content: 'Content2'),
      DreamChapter(title: 'Chapter3', content: 'Content3'),
    ],
  ),
];

class DreamContentPage extends StatelessWidget {
  final int index;

  const DreamContentPage({super.key, required this.index});

  @override
  Widget build(BuildContext context) {
    final DreamInfo dreamInfo = testList[index];
    return NormalPage(
      title: 'Dream ${dreamInfo.index + 1}: ${dreamInfo.title}',
      child: Padding(
        padding: const EdgeInsets.only(left: 16, right: 16, top: 8),
        child: SingleChildScrollView(
          child: Column(
            children: [
              Container(
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(16),
                ),
                child: Column(
                  children: [
                    Container(
                      height: 240,
                      decoration: const BoxDecoration(
                        borderRadius: BorderRadius.only(
                          topLeft: Radius.circular(16),
                          topRight: Radius.circular(16),
                        ),
                        image: DecorationImage(
                          // todo this should be a network image
                          image: AssetImage('assets/images/bg_dream.png'),
                          fit: BoxFit.cover,
                        ),
                      ),
                    ),
                    const SizedBox(height: 8),
                    for (int i = 0; i < dreamInfo.chapters.length; i++) buildChapterItem(i, dreamInfo.chapters[i]),
                    if (dreamInfo.index != testList.length - 1) ...[
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // todo check permission for the dream
                          Navigator.of(context).push(Right2LeftRouter(child: DreamContentPage(index: index + 1)));
                        },
                        style: ElevatedButton.styleFrom(
                          padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 8),
                          minimumSize: Size.zero,
                          tapTargetSize: MaterialTapTargetSize.shrinkWrap,
                          backgroundColor: DreamerColors.primary,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(100),
                          ),
                        ),
                        child: const Text(
                          'Next Dream',
                          style: TextStyle(
                            fontSize: 14,
                            height: 16.7 / 14,
                            fontWeight: FontWeight.w500,
                            color: Colors.white,
                          ),
                        ),
                      ),
                    ],
                    const SizedBox(height: 24),
                  ],
                ),
              ),
              const SizedBox(height: 96),
            ],
          ),
        ),
      ),
    );
  }

  Widget buildChapterItem(int index, DreamChapter chapter) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 8),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        mainAxisSize: MainAxisSize.min,
        children: [
          Align(
            alignment: Alignment.center,
            child: Text(
              'Chapter ${index + 1}: ${chapter.title}',
              style: const TextStyle(
                fontSize: 14,
                height: 16.7 / 14,
                fontWeight: FontWeight.w700,
                color: DreamerColors.grey800,
              ),
            ),
          ),
          const SizedBox(height: 8),
          Text(
            chapter.content,
            style: const TextStyle(
              fontSize: 13,
              height: 17 / 14,
              fontWeight: FontWeight.w500,
              color: DreamerColors.brown,
            ),
          ),
        ],
      ),
    );
  }
}
